@startuml

    namespace MTCG {
        namespace MTCG.Game {
            class GameController {
                - List<string> _battleLog
                - private Deck _deck1
                - private Deck _deck2
                + GameController(Deck deck1, Deck deck2)
                + void Play()
                - int HandleFight()
                + void AddBattleLog(string log)
                + void PrintLog()
            }
        }

        namespace MTCG.Cards {
            namespace MTCG.Cards.Rules {
                MTCG.Cards.Card "0...*" *-- "0...*" Rule : ruledBy >
                abstract class Rule {
                    + abstract void Apply(Card ruledCard, Card otherCard, GameController game)
                }

                Rule <|-- GobinVSDragonRule
                class GobinVSDragonRule {
                    - void Apply(Card ruledMonster, Card otherMonster, GameController game)
                }

                Rule <|-- FireElfVSDragonRule
                class FireElfVSDragonRule {
                    - void Apply(Card ruledMonster, Card otherMonster, GameController game)
                }

                Rule <|-- KnightVSWaterSpellRule
                class KnightVSWaterSpellRule {
                    - void Apply(Card ruledMonster, Card otherMonster, GameController game)
                }
                
                Rule <|-- KrakenVSSpellRule
                class KrakenVSSpellRule {
                    - void Apply(Card ruledMonster, Card otherMonster, GameController game)
                }
                
                Rule <|-- WizardVSOrcRule
                class WizardVSOrcRule {
                    - void Apply(Card ruledMonster, Card otherMonster, GameController game)
                }
            }
            class Deck {
                - List<Card> _cards
                {field} + string Name +get +set 
                {field} + int Count +get +private set 
                + Deck(string Name)
                + Card DrawCard()
                + void AddCard(Card card)
            }
            Deck "0...1" *-- "0...8" Card : contains >
            MTCG.Game.GameController "1" *-- "2" MTCG.Cards.Deck : plays with >

            abstract class Card {
                {field} + ElementType EType +get
                {field} + string Name +get
                {field} + int Damage +get
                {field} + List<Rule> Rules +get
                {field} + bool Destroyed +get +private set
                {field} + float OffensiveDamage +get
                {field} + float DefensiveDamage +get
                - List<float> _offensiveDamageFactors
                - List<float> _defensiveDamageFactors
                + Card(string name, ElementType type, int damage)
                + void Destroy()
                + void NoDamage()
                + void Effective()
                + void NotEffective()
                + void Reset()
            }

            Card "0...*" *-- "1" ElementType : has Type >
            enum ElementType {
                Fire
                Water
                Normal
            }

            namespace MTCG.Cards.Monsters {
                MTCG.Cards.Card <|-- Monster
                class Monster {
                    + Monster(string name, ElementType type, int damage)
                    {field} + CreatureType CType +get
                }

                Monster "0...*" *-- "1" CreatureType : has Type >
                enum CreatureType {
                    Goblin
                    Wizard
                    Kraken
                    Knight
                    Dragon
                    Orc
                }
            }

            namespace MTCG.Cards.Spells {
                MTCG.Cards.Card <|-- Spell
                class Spell {
                    + Spell(string name, ElementType type, int damage)
                }
            }
        }
    }

@enduml